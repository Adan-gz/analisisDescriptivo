% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcular_chi2.R
\name{calcular_chi2}
\alias{calcular_chi2}
\title{Calcular Test Chi-Cuadrado Ponderado para Dos Variables Categóricas}
\usage{
calcular_chi2(
  var1,
  var2,
  weight = NULL,
  na.rm = TRUE,
  drop.missing.levels = TRUE,
  mean1 = TRUE
)
}
\arguments{
\item{var1}{Vector. Variable categórica (o convertible a factor) correspondiente a las filas.}

\item{var2}{Vector. Variable categórica (o convertible a factor) correspondiente a las columnas.}

\item{weight}{Numeric vector (opcional). Pesos para cada observación. Si es \code{NULL}, se asume peso 1 para cada elemento.}

\item{na.rm}{Logical. Indica si se deben eliminar las observaciones con valores faltantes en \code{var1} o \code{var2}. Por defecto es \code{TRUE}.}

\item{drop.missing.levels}{Logical. Si \code{TRUE}, elimina los niveles vacíos de las variables categóricas. Por defecto es \code{TRUE}.}

\item{mean1}{Logical. Si \code{TRUE}, los pesos se normalizan dividiéndolos por su media (calculada con \code{na.rm = TRUE}). Por defecto es \code{TRUE}.}
}
\value{
Una lista que contiene:
\item{Chisq}{El estadístico chi-cuadrado calculado.}
\item{df}{Los grados de libertad del test.}
\item{p.value}{El valor p asociado al test.}
\item{tabla}{La tabla de contingencia ponderada generada con \code{xtabs()}.}
}
\description{
Esta función calcula el test chi-cuadrado para evaluar la asociación entre dos variables categóricas,
incorporando pesos si se especifica. Se filtran observaciones con NA y se ajustan los pesos dividiéndolos
por su media (opcional) para estabilizar la estimación. Además, se eliminan niveles vacíos en caso de que las
variables sean factores.
}
\details{
La función utiliza \code{xtabs()} para construir una tabla de contingencia ponderada y \code{summary()} para extraer
los parámetros del test chi-cuadrado. La normalización de los pesos puede ayudar a estabilizar la estimación, especialmente
cuando se trabajan con escalas muy diferentes.
}
\examples{
# Ejemplo con datos simulados:
set.seed(123)
var1 <- sample(LETTERS[1:3], 100, replace = TRUE)
var2 <- sample(c("X", "Y"), 100, replace = TRUE)
pesos <- runif(100, 0.5, 1.5)
res_chi <- calcular_chi2(var1, var2, weight = pesos)
res_chi

}
